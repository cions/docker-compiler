name: Build Image

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      force-to-build:
        type: boolean
        default: false
        required: false
        description: 'Force to build images'

jobs:
  build-gcc-image:
    name: Build Image (GCC ${{ matrix.gcc }} / ${{ matrix.target }})

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        gcc: [11, 10, 9, 8, 7, 6, 5]
        target:
        - aarch64-linux-gnu
        - alpha-linux-gnu
        - arm-linux-gnueabihf
        - hppa-linux-gnu
        - i686-linux-gnu
        - ia64-linux-gnu
        - m68k-linux-gnu
        - microblaze-linux-gnu
        - mips-linux-gnu
        - mips64-linux-gnuabi64
        - mips64el-linux-gnuabi64
        - mipsel-linux-gnu
        - nios2-linux-gnu
        - or1k-linux-uclibc
        - powerpc-linux-gnu
        - powerpc64-linux-gnu
        - powerpc64le-linux-gnu
        - riscv32-linux-gnu
        - riscv64-linux-gnu
        - s390x-linux-gnu
        - sh4-linux-gnu
        - sparc-linux-gnu
        - sparc64-linux-gnu
        - x86_64-linux-gnu
        - xtensa-linux-uclibc

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.x'
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: cions
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: cions
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Image
      env:
        GCC: ${{ matrix.gcc }}
        TARGET: ${{ matrix.target }}
        FORCE_BUILD: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.force-to-build }}
      run: ./build.sh

  test-image:
    name: Test Image
    needs:
    - build-gcc-image
    if: always()
    uses: cions/docker-crossdev/.github/workflows/test-image.yml@master
